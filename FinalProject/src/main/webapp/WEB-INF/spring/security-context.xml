<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<context:annotation-config/>
	<bean id="accountservice" class="security.AccountService"></bean>
	
	<bean id="loginsuccesshandler" class="security.LoginSuccessHandler"></bean>
	
	<bean id="accessdeniedhandler" class="security.UserAccessDeniedHandler"></bean>
	
	<bean id="loginfailurehandler" class="security.LoginFailureHandler">
		
	</bean>
	<!-- security - Encoder Class -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<security:http>
	
	 	<security:csrf disabled="true"/>	
	 	
	
		<security:intercept-url pattern="/member/loginform" access="permitAll"/> <!-- 익명사용자(인증되지 않은 사용자)도 접근할 수 있는 url -->
		<security:intercept-url pattern="/chk_email" access="permitAll"/> 
		<security:intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/> <!--  >> 권한컬럼 role 의 값이 ROLE_ADMIN 인 사람만이 들어갈 수 있다. -->
		<security:intercept-url pattern="/member/profile/main" access="isAuthenticated()"/>
		<security:intercept-url pattern="/member/switchType" access="isAuthenticated()"/>
		<security:access-denied-handler ref="accessdeniedhandler"/>
		
		<security:form-login login-page="/member/loginform"
							 login-processing-url="/member/login"
							 authentication-success-handler-ref="loginsuccesshandler"
							 authentication-failure-handler-ref="loginfailurehandler"/>
		<!-- 자동로그인 기능을 사용하기 위해서는 해당 dataSource (HikariCP) 에 명시한 데이터베이스 의 스키마에 
		스프링에서 권장해준 persistent_logins 테이블이 필요하다 >> 나중에 팀원에게 전달
		create table dream.persistent_logins(

		username varchar(64) not null,
		series varchar(64) primary key,
		token varchar(64) not null,
		last_used timestamp not null
		
		); 
		-->
		<!-- 자동 로그인 쿠키의 만료시간은 자유롭게 설정할 수 있으나 여기에서는 604800 초, 즉  1주일 이라 하겠다. -->
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
		<security:logout logout-url="/logout" 
						 invalidate-session="true"
						 logout-success-url="/"	
						 delete-cookies="JSESSIONID,remember-me"/>	
						 <!-- 로그아웃시 remember-me 쿠키를 삭제하여 데이터베이스의 persistent_logins 내 해당 유저의 로그인 기록도 없앤다 -->
						  
						 <!-- 이전 버전 -->		
						 <!-- delete-cookies="JSESSIONID"/> -->
						
						 
						 
	</security:http>
	<security:authentication-manager>
	
		<security:authentication-provider user-service-ref="accountservice">
			<security:password-encoder ref="bcryptPasswordEncoder"/>
		</security:authentication-provider>
	
	</security:authentication-manager>
	
	
	
	
	
	
	
		
</beans>